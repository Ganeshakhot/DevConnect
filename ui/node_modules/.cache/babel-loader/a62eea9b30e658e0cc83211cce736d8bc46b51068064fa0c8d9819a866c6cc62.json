{"ast":null,"code":"import api from'../utils/api';import{setAlert}from'./alert';import{GET_POSTS,POST_ERROR,UPDATE_LIKES,DELETE_POST,ADD_POST,GET_POST,ADD_COMMENT,REMOVE_COMMENT}from'./types';/*\r\n  NOTE: we don't need a config object for axios as the\r\n default headers in axios are already Content-Type: application/json\r\n also axios stringifies and parses JSON for you, so no need for \r\n JSON.stringify or JSON.parse\r\n*/ // Get posts\nexport const getPosts=()=>async dispatch=>{try{const res=await api.get('/posts');dispatch({type:GET_POSTS,payload:res.data});}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Add like\nexport const addLike=id=>async dispatch=>{try{const res=await api.put(\"/posts/like/\".concat(id));dispatch({type:UPDATE_LIKES,payload:{id,likes:res.data}});}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Remove like\nexport const removeLike=id=>async dispatch=>{try{const res=await api.put(\"/posts/unlike/\".concat(id));dispatch({type:UPDATE_LIKES,payload:{id,likes:res.data}});}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Delete post\nexport const deletePost=id=>async dispatch=>{try{await api.delete(\"/posts/\".concat(id));dispatch({type:DELETE_POST,payload:id});dispatch(setAlert('Post Removed','success'));}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Add post\nexport const addPost=formData=>async dispatch=>{try{const res=await api.post('/posts',formData);dispatch({type:ADD_POST,payload:res.data});dispatch(setAlert('Post Created','success'));}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Get post\nexport const getPost=id=>async dispatch=>{try{const res=await api.get(\"/posts/\".concat(id));dispatch({type:GET_POST,payload:res.data});}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Add comment\nexport const addComment=(postId,formData)=>async dispatch=>{try{const res=await api.post(\"/posts/comment/\".concat(postId),formData);dispatch({type:ADD_COMMENT,payload:res.data});dispatch(setAlert('Comment Added','success'));}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Delete comment\nexport const deleteComment=(postId,commentId)=>async dispatch=>{try{await api.delete(\"/posts/comment/\".concat(postId,\"/\").concat(commentId));dispatch({type:REMOVE_COMMENT,payload:commentId});dispatch(setAlert('Comment Removed','success'));}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};","map":{"version":3,"names":["api","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","id","put","concat","likes","removeLike","deletePost","delete","addPost","formData","post","getPost","addComment","postId","deleteComment","commentId"],"sources":["D:/DevConnect/ui/src/actions/post.js"],"sourcesContent":["import api from '../utils/api';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from './types';\r\n\r\n/*\r\n  NOTE: we don't need a config object for axios as the\r\n default headers in axios are already Content-Type: application/json\r\n also axios stringifies and parses JSON for you, so no need for \r\n JSON.stringify or JSON.parse\r\n*/\r\n\r\n// Get posts\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get('/posts');\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add like\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put(`/posts/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put(`/posts/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete post\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.delete(`/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id\r\n    });\r\n\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  try {\r\n    const res = await api.post('/posts', formData);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get post\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  try {\r\n    const res = await api.post(`/posts/comment/${postId}`, formData);\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    await api.delete(`/posts/comment/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId\r\n    });\r\n\r\n    dispatch(setAlert('Comment Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}