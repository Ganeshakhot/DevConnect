{"ast":null,"code":"import React,{Fragment,useEffect}from'react';import{connect}from'react-redux';import Spinner from'../layout/Spinner';import ProfileItem from'./ProfileItem';import{getProfiles}from'../../actions/profile';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Profiles=_ref=>{let{getProfiles,profile:{profiles,loading}}=_ref;useEffect(()=>{getProfiles();},[getProfiles]);return/*#__PURE__*/_jsx(\"section\",{className:\"container\",children:loading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"large text-primary\",children:\"Developers\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"lead\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fab fa-connectdevelop\"}),\" Browse and connect with developers\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"profiles\",children:profiles.length>0?profiles.map(profile=>/*#__PURE__*/_jsx(ProfileItem,{profile:profile},profile._id)):/*#__PURE__*/_jsx(\"h4\",{children:\"No profiles found...\"})})]})});};const mapStateToProps=state=>({profile:state.profile});export default connect(mapStateToProps,{getProfiles})(Profiles);","map":{"version":3,"names":["React","Fragment","useEffect","connect","Spinner","ProfileItem","getProfiles","jsx","_jsx","jsxs","_jsxs","Profiles","_ref","profile","profiles","loading","className","children","length","map","_id","mapStateToProps","state"],"sources":["D:/DevConnect/ui/src/components/profiles/Profiles.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className=\"large text-primary\">Developers</h1>\r\n          <p className=\"lead\">\r\n            <i className=\"fab fa-connectdevelop\" /> Browse and connect with\r\n            developers\r\n          </p>\r\n          <div className=\"profiles\">\r\n            {profiles.length > 0 ? (\r\n              profiles.map((profile) => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAElD,OAASC,OAAO,KAAQ,aAAa,CACrC,MAAO,CAAAC,OAAO,KAAM,mBAAmB,CACvC,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,OAASC,WAAW,KAAQ,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpD,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAqD,IAApD,CAAEN,WAAW,CAAEO,OAAO,CAAE,CAAEC,QAAQ,CAAEC,OAAQ,CAAE,CAAC,CAAAH,IAAA,CAC/DV,SAAS,CAAC,IAAM,CACdI,WAAW,CAAC,CAAC,CACf,CAAC,CAAE,CAACA,WAAW,CAAC,CAAC,CAEjB,mBACEE,IAAA,YAASQ,SAAS,CAAC,WAAW,CAAAC,QAAA,CAC3BF,OAAO,cACNP,IAAA,CAACJ,OAAO,GAAE,CAAC,cAEXM,KAAA,CAACT,QAAQ,EAAAgB,QAAA,eACPT,IAAA,OAAIQ,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,YAAU,CAAI,CAAC,cAClDP,KAAA,MAAGM,SAAS,CAAC,MAAM,CAAAC,QAAA,eACjBT,IAAA,MAAGQ,SAAS,CAAC,uBAAuB,CAAE,CAAC,sCAEzC,EAAG,CAAC,cACJR,IAAA,QAAKQ,SAAS,CAAC,UAAU,CAAAC,QAAA,CACtBH,QAAQ,CAACI,MAAM,CAAG,CAAC,CAClBJ,QAAQ,CAACK,GAAG,CAAEN,OAAO,eACnBL,IAAA,CAACH,WAAW,EAAmBQ,OAAO,CAAEA,OAAQ,EAA9BA,OAAO,CAACO,GAAwB,CACnD,CAAC,cAEFZ,IAAA,OAAAS,QAAA,CAAI,sBAAoB,CAAI,CAC7B,CACE,CAAC,EACE,CACX,CACM,CAAC,CAEd,CAAC,CAOD,KAAM,CAAAI,eAAe,CAAIC,KAAK,GAAM,CAClCT,OAAO,CAAES,KAAK,CAACT,OACjB,CAAC,CAAC,CAEF,cAAe,CAAAV,OAAO,CAACkB,eAAe,CAAE,CAAEf,WAAY,CAAC,CAAC,CAACK,QAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}